{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/styles/HeadingStyles.js","webpack:///./src/styles/ParagraphStyles.js","webpack:///./src/components/social.js","webpack:///./src/styles/ListStyles.js"],"names":["pageQuery","ProjectsPage","_ref","projects","_toConsumableArray","data","allProjectItemsJson","edges","react__WEBPACK_IMPORTED_MODULE_9___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_13__","_components_seo__WEBPACK_IMPORTED_MODULE_14__","title","_styles_HeadingStyles__WEBPACK_IMPORTED_MODULE_16__","_styles_ParagraphStyles__WEBPACK_IMPORTED_MODULE_17__","_styles_ListStyles__WEBPACK_IMPORTED_MODULE_18__","map","project","key","node","id","href","link","className","gatsby_image__WEBPACK_IMPORTED_MODULE_12___default","fluid","image","childImageSharp","alt","imageAlt","name","description","technologies","tag","i","gatsby__WEBPACK_IMPORTED_MODULE_10__","to","slugify","lower","_components_social__WEBPACK_IMPORTED_MODULE_15__","HeadingStyles","__webpack_require__","styled","h1","withConfig","displayName","componentId","props","theme","blue","bs","ParagraphStyles","p","green","SocialWrapper","div","orange","isDark","purple","Social","links","_public_static_d_513765785_json__WEBPACK_IMPORTED_MODULE_8__","allSocialLinksJson","_useInView","useInView","triggerOnce","threshold","ref","inView","xmlns","version","x","y","viewBox","d","target","rel","url","type","publicURL","ListStyles","ul"],"mappings":"4oBAYA,IA8CaA,EAAS,aAwBPC,UAtEM,SAAAC,GAAc,IAC3BC,EAAQC,EADmBF,EAAXG,KACIC,oBAAoBC,OAC9C,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,MAAM,aACXL,EAAAC,EAAAC,cAACI,EAAA,EAAD,iBACAN,EAAAC,EAAAC,cAACK,EAAA,EAAD,6LAKAP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACGb,EAASc,IAAI,SAAAC,GACZ,OACEV,EAAAC,EAAAC,cAAA,MAAIS,IAAKD,EAAQE,KAAKC,IACpBb,EAAAC,EAAAC,cAAA,KAAGY,KAAMJ,EAAQE,KAAKG,KAAMC,UAAU,kBACpChB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CACEiB,MAAOR,EAAQE,KAAKO,MAAMC,gBAAgBF,MAC1CG,IAAKX,EAAQE,KAAKU,YAGtBtB,EAAAC,EAAAC,cAAA,KAAGc,UAAU,QAAQF,KAAMJ,EAAQE,KAAKG,MACrCL,EAAQE,KAAKW,MAEhBvB,EAAAC,EAAAC,cAAA,SAAIQ,EAAQE,KAAKY,aACjBxB,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,+BACCQ,EAAQE,KAAKa,aAAahB,IAAI,SAACiB,EAAKC,GAAN,OAC7B3B,EAAAC,EAAAC,cAAC0B,EAAA,KAAD,CACEjB,IAAKgB,EACLX,UAAU,MACVa,GAAE,SAAWC,IAAQJ,EAAK,CAAEK,OAAO,KAElCL,UAQf1B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,0CCrDN,IAEMC,EAFNC,EAAA,KAEsBC,EAAOC,GAAVC,WAAA,CAAAC,YAAA,gBAAAC,YAAA,eAAGJ,CAAH,gQAWD,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,MAErB,SAAAF,GAAK,OAAIA,EAAMC,MAAME,KAMxBV,wCCrBf,IAEMW,EAFNV,EAAA,KAEwBC,EAAOU,EAAVR,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,mKAUa,SAAAK,GAAK,OAAIA,EAAMC,MAAMK,QAIxCF,odCXf,IAAMG,SAAgBZ,EAAOa,IAAVX,WAAA,CAAAC,YAAA,wBAAAC,YAAA,YAAGJ,CAAH,6zBAce,SAAAK,GAAK,OAAIA,EAAMC,MAAMQ,QAQvC,SAAAT,GAAK,OACbA,EAAMC,MAAMS,OAAZ,+FAMI,SAAAV,GAAK,OACXA,EAAMC,MAAMS,OAASV,EAAMC,MAAMC,KAAOF,EAAMC,MAAMU,SAkG3CC,IAjEA,WACb,IAgBMC,EAAKzD,EAhBD0D,EAAAzD,KAgBa0D,mBAAmBxD,OAjBvByD,EAmBGC,YAAU,CAC9BC,aAAa,EACbC,UAAW,IAFNC,EAnBYJ,EAAA,GAmBPK,EAnBOL,EAAA,GAwBnB,OACExD,EAAAC,EAAAC,cAAC6C,EAAD,KACE/C,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,OAAK0D,IAAKA,EAAK5C,UAAW6C,EAAS,SAAW,IAC5C7D,EAAAC,EAAAC,cAAA,OACEc,UAAU,QACV8C,MAAM,6BACNC,QAAQ,MACRC,EAAE,MACFC,EAAE,MACFC,QAAQ,eAERlE,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAMiE,EAAE,qRAKfd,EAAM5C,IAAI,SAAAM,GACT,OACEf,EAAAC,EAAAC,cAAA,KACES,IAAKI,EAAKH,KAAKC,GACfuD,OAAO,SACPC,IAAI,sBACJvD,KAAMC,EAAKH,KAAK0D,KAEhBtE,EAAAC,EAAAC,cAAA,UACEqE,KAAK,gBACL1E,KAAMkB,EAAKH,KAAKO,MAAMqD,UACtBxD,UAAU,QAETD,EAAKH,KAAKW,gkCC5HzB,IAEMkD,EAFNvC,EAAA,KAEmBC,EAAOuC,GAAVrC,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAAGJ,CAAH,8uBAYe,SAAAK,GAAK,OAAIA,EAAMC,MAAMQ,QAYlC,SAAAT,GAAK,OAAIA,EAAMC,MAAME,IAIZ,SAAAH,GAAK,OAAIA,EAAMC,MAAMK,OAGnC,SAAAN,GAAK,OACZA,EAAMC,MAAMS,OAASV,EAAMC,MAAMC,KAAOF,EAAMC,MAAMU,QAQxC,SAAAX,GAAK,OAAIA,EAAMC,MAAMK,MAAQ,MAClC,SAAAN,GAAK,OACZA,EAAMC,MAAMS,OAASV,EAAMC,MAAMC,KAAOF,EAAMC,MAAMU,SAe3CsB","file":"component---src-pages-projects-js-aed98bc36f8ccf480867.js","sourcesContent":["import React from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport slugify from \"slugify\"\r\nimport Img from \"gatsby-image\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Social from \"../components/social\"\r\nimport HeadingStyles from \"../styles/HeadingStyles\"\r\nimport ParagraphStyles from \"../styles/ParagraphStyles\"\r\nimport ListStyles from \"../styles/ListStyles\"\r\n\r\nconst ProjectsPage = ({ data }) => {\r\n  const projects = [...data.allProjectItemsJson.edges]\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Projects\" />\r\n      <HeadingStyles>Projects</HeadingStyles>\r\n      <ParagraphStyles>\r\n        I have worked on varying projects over my career. Some for professional\r\n        purposes and others for personal growth. Here is a short list of some of\r\n        the projects that I have developed.\r\n      </ParagraphStyles>\r\n      <ListStyles>\r\n        {projects.map(project => {\r\n          return (\r\n            <li key={project.node.id}>\r\n              <a href={project.node.link} className=\"featured-image\">\r\n                <Img\r\n                  fluid={project.node.image.childImageSharp.fluid}\r\n                  alt={project.node.imageAlt}\r\n                />\r\n              </a>\r\n              <a className=\"title\" href={project.node.link}>\r\n                {project.node.name}\r\n              </a>\r\n              <p>{project.node.description}</p>\r\n              <p>\r\n                <strong>Built wilth: </strong>\r\n                {project.node.technologies.map((tag, i) => (\r\n                  <Link\r\n                    key={i}\r\n                    className=\"tag\"\r\n                    to={`/tags/${slugify(tag, { lower: true })}`}\r\n                  >\r\n                    {tag}\r\n                  </Link>\r\n                ))}\r\n              </p>\r\n            </li>\r\n          )\r\n        })}\r\n      </ListStyles>\r\n      <Social></Social>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query ProjectItemsQuery {\r\n    allProjectItemsJson {\r\n      edges {\r\n        node {\r\n          id\r\n          name\r\n          description\r\n          link\r\n          technologies\r\n          image {\r\n            childImageSharp {\r\n              fluid(maxWidth: 800) {\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n            }\r\n          }\r\n          imageAlt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default ProjectsPage\r\n","import styled from \"styled-components\"\r\n\r\nconst HeadingStyles = styled.h1`\r\n  font-size: 7rem;\r\n  padding: 2rem;\r\n  justify-self: center;\r\n  display: grid;\r\n  text-align: center;\r\n  text-shadow: -1px 1px 2px rgba(0, 0, 0, 0.2);\r\n  :after {\r\n    content: \"\";\r\n    height: 0.5rem;\r\n    margin-top: 1rem;\r\n    background: ${props => props.theme.blue};\r\n    width: 100%;\r\n    box-shadow: ${props => props.theme.bs};\r\n  }\r\n  @media (max-width: 500px) {\r\n    font-size: 5rem;\r\n  }\r\n`\r\nexport default HeadingStyles\r\n","import styled from \"styled-components\"\r\n\r\nconst ParagraphStyles = styled.p`\r\n  max-width: 70rem;\r\n  width: 100%;\r\n  justify-self: center;\r\n  font-size: 2rem;\r\n  margin: 0;\r\n  padding-left: 2rem;\r\n  padding-right: 2rem;\r\n  line-height: 1.8;\r\n  a {\r\n    border-bottom: 0.2rem solid ${props => props.theme.green};\r\n  }\r\n`\r\n\r\nexport default ParagraphStyles\r\n","import React from \"react\"\r\nimport { useInView } from \"react-intersection-observer\"\r\nimport styled from \"styled-components\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nconst SocialWrapper = styled.div`\r\n  margin-top: 2rem;\r\n  margin-bottom: 5rem;\r\n  position: relative;\r\n  display: grid;\r\n  grid-column-gap: 1rem;\r\n  grid-row-gap: 4rem;\r\n  grid-template-columns: repeat(5, minmax(5rem, 15rem));\r\n  justify-self: center;\r\n  justify-items: center;\r\n  h2 {\r\n    grid-column: 1 / -1;\r\n    margin-bottom: 0;\r\n    font-size: 2.5rem;\r\n    border-bottom: 0.2rem solid ${props => props.theme.orange};\r\n    padding-bottom: 0.5rem;\r\n  }\r\n  .icon {\r\n    width: 8rem;\r\n    transition: 0.2s all ease-in;\r\n    :hover {\r\n      transform: translateY(-10%);\r\n      filter: ${props =>\r\n        props.theme.isDark\r\n          ? `drop-shadow(0px 6px 2px rgba(76, 42, 133, 1))`\r\n          : `drop-shadow(0px 6px 2px rgba(0, 0, 0, 0.2))`};\r\n    }\r\n  }\r\n  .arrow {\r\n    fill: ${props =>\r\n      props.theme.isDark ? props.theme.blue : props.theme.purple};\r\n    height: 4rem;\r\n    width: 4rem;\r\n    transform: rotate(90deg);\r\n  }\r\n  .active {\r\n    grid-column: 1 / -1;\r\n    animation-name: bounce;\r\n    animation-duration: 1.8s;\r\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);\r\n    animation-iteration-count: 3;\r\n    @keyframes bounce {\r\n      0%,\r\n      20%,\r\n      50%,\r\n      80%,\r\n      100% {\r\n        transform: translateY(0px);\r\n      }\r\n      40% {\r\n        transform: translateY(-15px);\r\n      }\r\n      60% {\r\n        transform: translateY(-5px);\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 630px) {\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 2rem;\r\n  }\r\n`\r\n\r\nconst Social = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query SocialLinksQuery {\r\n      allSocialLinksJson {\r\n        edges {\r\n          node {\r\n            id\r\n            image {\r\n              publicURL\r\n            }\r\n            url\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const links = [...data.allSocialLinksJson.edges]\r\n\r\n  const [ref, inView] = useInView({\r\n    triggerOnce: true,\r\n    threshold: 0,\r\n  })\r\n\r\n  return (\r\n    <SocialWrapper>\r\n      <h2>Where to Find Me</h2>\r\n      <div ref={ref} className={inView ? \"active\" : \"\"}>\r\n        <svg\r\n          className=\"arrow\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          version=\"1.1\"\r\n          x=\"0px\"\r\n          y=\"0px\"\r\n          viewBox=\"0 0 100 100\"\r\n        >\r\n          <g>\r\n            <g>\r\n              <path d=\"M95.9,46.2L65.4,15.7c-2.1-2.1-5.5-2.1-7.5,0c-2.1,2.1-2.1,5.5,0,7.5l21.5,21.5H7.8c-2.9,0-5.3,2.4-5.3,5.3    c0,2.9,2.4,5.3,5.3,5.3h71.5L57.9,76.8c-2.1,2.1-2.1,5.5,0,7.5c1,1,2.4,1.6,3.8,1.6s2.7-0.5,3.8-1.6l30.6-30.6    c1-1,1.6-2.4,1.6-3.8C97.5,48.6,96.9,47.2,95.9,46.2z\"></path>\r\n            </g>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n      {links.map(link => {\r\n        return (\r\n          <a\r\n            key={link.node.id}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href={link.node.url}\r\n          >\r\n            <object\r\n              type=\"image/svg+xml\"\r\n              data={link.node.image.publicURL}\r\n              className=\"icon\"\r\n            >\r\n              {link.node.name}\r\n            </object>\r\n          </a>\r\n        )\r\n      })}\r\n    </SocialWrapper>\r\n  )\r\n}\r\n\r\nexport default Social\r\n","import styled from \"styled-components\"\r\n\r\nconst ListStyles = styled.ul`\r\n  max-width: 80rem;\r\n  width: 100%;\r\n  justify-self: center;\r\n  margin-top: 3rem;\r\n  padding: 1rem;\r\n  list-style: none;\r\n  li {\r\n    display: grid;\r\n    grid-gap: 1rem;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-rows: repeat(3, minmax(min-content, max-content));\r\n    border-top: 0.2rem solid ${props => props.theme.orange};\r\n    padding-top: 2rem;\r\n    padding-bottom: 2rem;\r\n  }\r\n  p {\r\n    line-height: 1.8;\r\n    font-size: 2rem;\r\n  }\r\n  .featured-image {\r\n    grid-column: 1 / span 1;\r\n    grid-row: 1 / -1;\r\n    display: grid;\r\n    box-shadow: ${props => props.theme.bs};\r\n  }\r\n  .featured-image img {\r\n    border-radius: 4px;\r\n    border: 0.1rem solid ${props => props.theme.green};\r\n  }\r\n  .title {\r\n    color: ${props =>\r\n      props.theme.isDark ? props.theme.blue : props.theme.purple};\r\n    font-weight: bold;\r\n    font-size: 2.5rem;\r\n  }\r\n  .tag {\r\n    font-size: 1.5rem;\r\n    display: inline-block;\r\n    margin-right: 1rem;\r\n    background: ${props => props.theme.green + \"4D\"};\r\n    color: ${props =>\r\n      props.theme.isDark ? props.theme.blue : props.theme.purple};\r\n    border-radius: 2px;\r\n    padding: 0 1rem;\r\n    :hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n  @media (max-width: 630px) {\r\n    li {\r\n      grid-template-columns: 1fr;\r\n      grid-template-rows: 1fr;\r\n    }\r\n  }\r\n`\r\n\r\nexport default ListStyles\r\n"],"sourceRoot":""}